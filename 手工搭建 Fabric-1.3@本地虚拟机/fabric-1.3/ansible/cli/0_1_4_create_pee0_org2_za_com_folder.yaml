- hosts: cli  
  vars:
    fabric_deploy_home:  /root/fabric/fabric-deploy
  remote_user: root
  gather_facts: no
  tasks:

#######################################   peer0.org2.za.com  ##########################################################
  - name:  "创建 peer0.org2.za.com 主机部署目录，并且复制证书"
    copy: 
      src: '{{ fabric_deploy_home }}/certs/peerOrganizations/org2.za.com/peers/peer0.org2.za.com'
      dest: '{{ fabric_deploy_home }}'

  - name:  "复制 peer 执行程序到 {{ fabric_deploy_home }}/peer0.org2.za.com目录下"
    copy: 
      src: '{{ fabric_deploy_home }}/bin/peer'
      dest: '{{ fabric_deploy_home }}/peer0.org2.za.com'
      mode: 0775

  - name:  "创建 peer0.org2.za.com 上的 core.yaml 文件"
    copy:
      dest: "{{ fabric_deploy_home }}/peer0.org2.za.com/core.yaml"
      content: |
        logging:
            level:      info
            cauthdsl:   warning
            gossip:     warning
            grpc:       error
            ledger:     info
            msp:        warning
            policies:   warning
            peer:
                gossip: warning
            
            format: '%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}'
            
        peer:
            
            id: peer0.org2.za.com
            
            networkId: dev
            
            listenAddress: 0.0.0.0:7051
            
            address: 0.0.0.0:7051
            
            addressAutoDetect: false
            
            gomaxprocs: -1
            
            keepalive:
                minInterval: 60s
                client:
                    interval: 60s
                    timeout: 20s
                deliveryClient:
                    interval: 60s
                    timeout: 20s
            
            gossip:
                bootstrap: peer0.org2.za.com:7051
            
                useLeaderElection: true
                orgLeader: false
            
                endpoint:
                maxBlockCountToStore: 100
                maxPropagationBurstLatency: 10ms
                maxPropagationBurstSize: 10
                propagateIterations: 1
                propagatePeerNum: 3
                pullInterval: 4s
                pullPeerNum: 3
                requestStateInfoInterval: 4s
                publishStateInfoInterval: 4s
                stateInfoRetentionInterval:
                publishCertPeriod: 10s
                skipBlockVerification: false
                dialTimeout: 3s
                connTimeout: 2s
                recvBuffSize: 20
                sendBuffSize: 200
                digestWaitTime: 1s
                requestWaitTime: 1500ms
                responseWaitTime: 2s
                aliveTimeInterval: 5s
                aliveExpirationTimeout: 25s
                reconnectInterval: 25s
                externalEndpoint:
                election:
                    startupGracePeriod: 15s
                    membershipSampleInterval: 1s
                    leaderAliveThreshold: 10s
                    leaderElectionDuration: 5s
                pvtData:
                    pullRetryThreshold: 60s
                    transientstoreMaxBlockRetention: 1000
                    pushAckTimeout: 3s
                    btlPullMargin: 10
                    reconcileBatchSize: 10
                    reconcileSleepInterval: 5m
            
            tls:
                enabled:  true
                clientAuthRequired: false
                cert:
                    file: tls/server.crt
                key:
                    file: tls/server.key
                rootcert:
                    file: tls/ca.crt
                clientRootCAs:
                    files:
                      - tls/ca.crt
                clientKey:
                    file:
                clientCert:
                    file:
            
            authentication:
                timewindow: 15m
            
            fileSystemPath: /var/hyperledger/production
            
            BCCSP:
                Default: SW
                SW:
                    Hash: SHA2
                    Security: 256
                    FileKeyStore:
                        KeyStore:
                PKCS11:
                    Library:
                    Label:
                    Pin:
                    Hash:
                    Security:
                    FileKeyStore:
                        KeyStore:
            
            mspConfigPath: msp
            
            localMspId: Org2MSP
            
            client:
                connTimeout: 3s
            
            deliveryclient:
                reconnectTotalTimeThreshold: 3600s
            
                connTimeout: 3s
            
                reConnectBackoffThreshold: 3600s
            
            localMspType: bccsp
            
            profile:
                enabled:     false
                listenAddress: 0.0.0.0:6060
            adminService:
            handlers:
                authFilters:
                  -
                    name: DefaultAuth
                  -
                    name: ExpirationCheck    # This filter checks identity x509 certificate expiration
                decorators:
                  -
                    name: DefaultDecorator
                endorsers:
                  escc:
                    name: DefaultEndorsement
                    library:
                validators:
                  vscc:
                    name: DefaultValidation
                    library:
            validatorPoolSize:
            discovery:
                enabled: true
                authCacheEnabled: true
                authCacheMaxSize: 1000
                authCachePurgeRetentionRatio: 0.75
                orgMembersAllowedAccess: false
            
        vm:
            endpoint: unix:///var/run/docker.sock
            docker:
                tls:
                    enabled: false
                    ca:
                        file: docker/ca.crt
                    cert:
                        file: docker/tls.crt
                    key:
                        file: docker/tls.key
                attachStdout: false
                hostConfig:
                    NetworkMode: host
                    Dns:
                    LogConfig:
                        Type: json-file
                        Config:
                            max-size: "50m"
                            max-file: "5"
                    Memory: 2147483648
            
            
        chaincode:
            id:
                path:
                name:
            
            builder: $(DOCKER_NS)/fabric-ccenv:latest
            pull: false
            
            golang:
                runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION)
                dynamicLink: false
            
            car:
                runtime: $(BASE_DOCKER_NS)/fabric-baseos:$(ARCH)-$(BASE_VERSION)
            
            java:
                runtime: $(DOCKER_NS)/fabric-javaenv:$(ARCH)-$(PROJECT_VERSION)
            
            node:
                runtime: $(BASE_DOCKER_NS)/fabric-baseimage:$(ARCH)-$(BASE_VERSION)
            startuptimeout: 300s
            
            executetimeout: 30s
            mode: net
            keepalive: 0
            system:
                +lifecycle: enable
                cscc: enable
                lscc: enable
                escc: enable
                vscc: enable
                qscc: enable
            systemPlugins:
            logging:
              level:  info
              shim:   warning
              format: '%{color}%{time:2006-01-02 15:04:05.000 MST} [%{module}] %{shortfunc} -> %{level:.4s} %{id:03x}%{color:reset} %{message}'
            
            
        ledger:
            
          blockchain:
            
          state:
            stateDatabase: CouchDB     #goleveldb
            totalQueryLimit: 100000
            couchDBConfig:
               couchDBAddress: 127.0.0.1:5984
               username:    admin
               password:    password
               maxRetries: 3
               maxRetriesOnStartup: 10
               requestTimeout: 35s
               internalQueryLimit: 1000
               maxBatchUpdateSize: 1000
               warmIndexesAfterNBlocks: 1
               createGlobalChangesDB: false
            
          history:
            enableHistoryDatabase: true
            
            
        metrics:
            enabled: false
            reporter: statsd
            interval: 1s
            statsdReporter:
                  address: 0.0.0.0:8125
                  flushInterval: 2s
                  flushBytes: 1432
            promReporter:
                  listenAddress: 0.0.0.0:8080

  - name:  "创建一个启动 peer0.org2.za.com 的 peer 的批处理文件"
    copy: 
      dest: '{{ fabric_deploy_home }}/peer0.org2.za.com/startPeer.sh'
      mode: 0775
      content: |
        #!/bin/bash
        cd  /opt/fabric/peer
        /opt/fabric/peer/peer node start 2>&1 |tee log

